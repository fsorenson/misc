--- a/fs/xfs/xfs_linux.h	2019-07-11 16:06:24.000000000 -0400
+++ b/fs/xfs/xfs_linux.h	2019-07-29 09:58:48.355637336 -0400
@@ -289,4 +289,9 @@
 #define XFS_IS_REALTIME_INODE(ip) (0)
 #endif
 
+#define DEFAULT_CIL_CYCLES_TO_BURN 10
+#define DEFAULT_CIL_BURN_DIVIDER 2
+extern unsigned long cil_cycles_to_burn;
+extern unsigned long cil_burn_divider;
+
 #endif /* __XFS_LINUX__ */
--- a/fs/xfs/xfs_log_cil.c	2019-07-30 03:12:45.879288181 -0400
+++ b/fs/xfs/xfs_log_cil.c	2019-07-29 10:18:31.416306554 -0400
@@ -32,17 +32,20 @@
 #include "xfs_log_priv.h"
 
 
-#define DEF_BURN_CYCLES 10
+unsigned long cil_cycles_to_burn = DEFAULT_CIL_CYCLES_TO_BURN;
+unsigned long cil_burn_divider = DEFAULT_CIL_BURN_DIVIDER;
 
 static void cil_burn_cycles(unsigned long loops) {
-	while (loops--)
-		nop();
+	unsigned long divider = cil_burn_divider;
+	if (divider && loops && (current_pid() % divider == 0))
+		while (loops--)
+			nop();
 }
 
 static inline void __cil_list_del(struct list_head * prev, struct list_head * next) {
-	cil_burn_cycles(DEF_BURN_CYCLES);
+	cil_burn_cycles(cil_cycles_to_burn);
         next->prev = prev;
-	cil_burn_cycles(DEF_BURN_CYCLES);
+	cil_burn_cycles(cil_cycles_to_burn);
         prev->next = next;
 }
 
@@ -53,11 +56,11 @@
 {
         struct list_head *prev, *next;
 
-	cil_burn_cycles(DEF_BURN_CYCLES);
+	cil_burn_cycles(cil_cycles_to_burn);
         prev = entry->prev;
-	cil_burn_cycles(DEF_BURN_CYCLES);
+	cil_burn_cycles(cil_cycles_to_burn);
         next = entry->next;
-	cil_burn_cycles(DEF_BURN_CYCLES);
+	cil_burn_cycles(cil_cycles_to_burn);
 
         if (WARN(next == LIST_POISON1,
                 "list_del corruption, %p->next is LIST_POISON1 (%p)\n",
@@ -81,13 +84,13 @@
 static inline void __cil_list_add(struct list_head *new,
                               struct list_head *prev,
                               struct list_head *next) {
-	cil_burn_cycles(DEF_BURN_CYCLES);
+	cil_burn_cycles(cil_cycles_to_burn);
         next->prev = new;
-	cil_burn_cycles(DEF_BURN_CYCLES);
+	cil_burn_cycles(cil_cycles_to_burn);
         new->next = next;
-	cil_burn_cycles(DEF_BURN_CYCLES);
+	cil_burn_cycles(cil_cycles_to_burn);
         new->prev = prev;
-	cil_burn_cycles(DEF_BURN_CYCLES);
+	cil_burn_cycles(cil_cycles_to_burn);
         prev->next = new;
 }
 static inline void cil_list_add(struct list_head *new, struct list_head *head) {
@@ -112,14 +115,14 @@
         struct list_head *first = list->next;
         struct list_head *last = list->prev;
 
-	cil_burn_cycles(DEF_BURN_CYCLES);
+	cil_burn_cycles(cil_cycles_to_burn);
         first->prev = prev;
-	cil_burn_cycles(DEF_BURN_CYCLES);
+	cil_burn_cycles(cil_cycles_to_burn);
         prev->next = first;
 
-	cil_burn_cycles(DEF_BURN_CYCLES);
+	cil_burn_cycles(cil_cycles_to_burn);
         last->next = next;
-	cil_burn_cycles(DEF_BURN_CYCLES);
+	cil_burn_cycles(cil_cycles_to_burn);
         next->prev = last;
 }
 
--- a/fs/xfs/xfs_super.c	2019-07-11 16:06:24.000000000 -0400
+++ b/fs/xfs/xfs_super.c	2019-07-29 10:15:08.510448621 -0400
@@ -57,6 +57,7 @@
 #include <linux/kthread.h>
 #include <linux/freezer.h>
 #include <linux/parser.h>
+#include <linux/moduleparam.h>
 
 static const struct super_operations xfs_super_operations;
 struct bio_set *xfs_ioend_bioset;
@@ -2128,6 +2129,17 @@
 	xfs_uuid_table_free();
 }
 
+module_param_named(cil_cycles_to_burn, cil_cycles_to_burn, ulong, 0644);
+MODULE_PARM_DESC(cil_cycles_to_burn, "Number of cycles to burn in cil-related "
+		"list-related functions (default: "
+		__stringify(DEFAULT_CIL_CYCLES_TO_BURN) ")");
+
+module_param_named(cil_burn_divider, cil_burn_divider, ulong, 0644);
+MODULE_PARM_DESC(cil_burn_divider, "PID divider to determine whether the cil-related "
+		"list-related functions will burn cycles (burn cycles if "
+		"(<PID> %% cil_burn_divider) == 1; disable entirely with cil_burn_divider=0;  (default: "
+		__stringify(DEFAULT_CIL_BURN_DIVIDER) ")");
+
 module_init(init_xfs_fs);
 module_exit(exit_xfs_fs);
 
