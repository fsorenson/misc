#!/bin/bash

# Frank Sorenson, <sorenson@redhat.com>, 2018
#
# script to create a filesystem image that requires more than ( (1<<32) - 1) blocks
#   as reproducer for Red Hat bugzilla 1553004
#
# creates a 20 TB ext4 filesystem image, populates it 90% full with files, using
#   fallocate to allocate disk blocks.  Final image size is approximately 1.4 GiB

image=testfs.img
mount=/mnt/testfs
# exact calculations are not needed
fs_size=20000000000000	# filesystem 'size'
occupy_pct=90		# percentage of filesystem blocks to allocate
occupy_size=$(( ($fs_size / 100) * $occupy_pct ))

fs_block_size=4096	# filesystem block size

file_count=40000	# number of files to create on the filesystem
file_size=$(( $occupy_size / $file_count ))	# size of each file created
file_blks=$(( $file_size / $fs_block_size ))	# number of blocks for each file

echo "creating filesystem"
rm -f $image
truncate -s $fs_size $image
mkfs.ext4 -q -F -b $fs_block_size -g 32768 -I 256 $image

echo "adding $file_count files of $file_size bytes ($file_blks blocks) each"
mkdir -p $mount
mount $image $mount
for i in $(seq 1 $file_count) ; do
	fallocate -l $file_size $mount/testfile$i
done
umount /mnt/testfs

dumpe2fs -h $image
