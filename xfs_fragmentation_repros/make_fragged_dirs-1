#!/bin/bash

# Frank Sorenson <sorenson@redhat.com>
# Red Hat, 2017

# script to reproduce
# Red Hat bugzilla

image=/home/repro_test1.img
mountpoint=/mnt/tmp
max_files=5000
crash_attempts=30
fs_size=50 # in MiB

play_cowbell() {
#	dd if=/dev/zero of=$1 bs=$2 count=1 2>/dev/null
	truncate -s $2 $1
}
more_cowbell() {
	bmap_lines=$(xfs_bmap $mountpoint/testdir_1 | wc -l)
	[[ $bmap_lines -lt 6 ]]
}

echo "creating filesystem image $image and filesystem"
# just in case it's mounted...
umount $mountpoint >/dev/null 2>&1

mkdir -p $mountpoint
rm -f $image
truncate -s ${fs_size}M $image
mkfs.xfs -b size=4k -n size=8k -m crc=0 $image -f || exit

mount -oloop,attr2,inode64,noquota $image $mountpoint

for i in $(seq 1 10) ; do
	mkdir -p $mountpoint/dir$i
done

testdir1=$mountpoint/dir1

bmap_lines=0
current_i=0
extent7_start=0
extent8_start=0
while [[ $bmap_lines -lt 10 ]] ; do
	play_cowbell $testdir1/testfile_$current_i 4k || break

	for i in $(seq 2 10) ; do
		play_cowbell $mountpoint/dir$i/testfile_$current_i 4k || break
	done
#	play_cowbell $testdir2/testfile_$current_i 4k || break
#	play_cowbell $testdir3/testfile_$current_i 4k || break
#	play_cowbell $testdir4/testfile_$current_i 4k || break
#	play_cowbell $testdir5/testfile_$current_i 4k || break
#	play_cowbell $testdir6/testfile_$current_i 4k || break


	current_i=$(( $current_i + 1 ))
	bmap=$(xfs_bmap $testdir1)
	bmap_lines=$(echo -e "$bmap" | wc -l)
	if [[ $bmap_lines -eq 6 && $extent7_start -eq 0 ]] ; then
		extent7_start=$current_i
	elif [[ $bmap_lines -eq 7 && $extent8_start -eq 0 ]] ; then
		extent8_start=$current_i
	fi
done
echo "xfs_bmap $testdir1:"
echo -e "$bmap"

num_files=$(ls -1fl $testdir1 | wc -l)
echo "created $current_i files ($num_files)"

exit

echo "extent #7 contains files $extent7_start through " $(( $extent8_start - 1 ))
for i in $(seq $extent7_start $(( $extent8_start - 1)) ) ; do
	rm -f $testdir1/testfile_$i
done

num_files=$(ls -1f $testdir1 | wc -l)
echo "deleted some files from the directory, and there are now $num_files"


#for f in $(seq 1 $max_files) ; do
#	play_cowbell $mountpoint/testfile_$f 8k || break
#	[[ $f -gt 1 ]] && truncate -s 4k $mountpoint/testfile_$((f - 1))
#done
#[[ -f $mountpoint/testfile_$f ]] || f=$((f - 1))
#lastf=$f



exit 1


bmap=$(xfs_bmap $testdir1)
bmap_lines=$(echo -e "$bmap" | wc -l)
echo -e "$bmap"


#echo
#echo
#xfs_info $mountpoint

#umount $mountpoint


exit


echo "mounting image and creating files in $mountpoint"
# create 8KiB testfile_$n
# truncate testfile_$(n-1) to 4KiB
for f in $(seq 1 $max_files) ; do
	play_cowbell $mountpoint/testfile_$f 8k || break
	[[ $f -gt 1 ]] && truncate -s 4k $mountpoint/testfile_$((f - 1))
done
[[ -f $mountpoint/testfile_$f ]] || f=$((f - 1))
lastf=$f

# make some space
strt=$(( $lastf - 30 ))
[[ $strt -lt 1 ]] && strt=1
for f in $(seq $strt $lastf) ; do
	rm -f $mountpoint/testfile_$f
done

echo "creating files in $mountpoint/testdir_1"
mkdir $mountpoint/testdir_1
for f in $(seq 1 $max_files) ; do
	play_cowbell $mountpoint/testdir_1/testfile_$f 4k
done

rm -f $mountpoint/testfile_*

for f in $(seq 1 $max_files) ; do
	play_cowbell $mountpoint/testdir_1/testfile_$f 4k || break
	more_cowbell || break
done
rm -f $mountpoint/testdir_1/testfile_$f
file_count=$((f - 1))
echo "created $file_count files in $mountpoint/testdir_1"

bmap=$(xfs_bmap $mountpoint/testdir_1)
bmap_lines=$(echo -e "$bmap" | wc -l)
echo -e "$bmap"

if [[ $bmap_lines -eq 5 ]] ; then
	echo "successfully created directory in $image mounted at $mountpoint"
else
	echo "insert coin to play again"
	exit
fi

sync
sleep 2
sync

echo "goodbye, cruel world!"
for i in $(seq 1 $crash_attempts) ; do
	target_file=$(( ($RANDOM % ($file_count / 2)) + ($file_count / 2) ))

	echo "$i: trying to crash by unlinking $mountpoint/testdir_1/testfile_$target_file"
	if [[ -f $mountpoint/testdir_1/testfile_$target_file ]] ; then
		unlink $mountpoint/testdir_1/testfile_$target_file
		sync
		sleep 10
	fi
done

echo "the agony of defeat"
umount $mountpoint
