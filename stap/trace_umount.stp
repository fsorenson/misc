# 
# Frank Sorenson <sorenson@redhat.com>, 2024
#
# tested with kernel 5.14.0-364.el9.x86_64
# and systemtap-5.0-4.el9.x86_64

function task_anc(t) {
	ret = sprintf("%s(%d)", task_execname(t), task_tid(t))
	ptask = task_parent(t)

	while (t != ptask) {
		t = ptask

		newent = sprintf("%s(%d)", task_execname(t), task_tid(t))
		ret = sprintf("%s->%s", newent, ret)

		ptask = task_parent(t)
	}
	return ret
}
probe syscall.umount {
	printf("%s: %s - unmounting %s (flags: %s)\n", task_anc(task_current()), cmdline_str(), target, flags_str)
}
probe syscall.umount.return {
	printf("%s: %s - umount returns %s\n", task_anc(task_current()), cmdline_str(), retstr)
}
probe kernel.function("umount_tree") {
	path = task_dentry_path(task_current(), $mnt->mnt->mnt_root, &$mnt->mnt)
	printf("%s: %s('%s')\n", task_anc(task_current()), ppfunc(), path)
}
probe kernel.function("path_umount") {
	path = task_dentry_path(task_current(), $path->mnt->mnt_root, $path->mnt)
	printf("%s: %s('%s')\n", task_anc(task_current()), ppfunc(), path)
}
