#!/bin/bash

cmd=$(basename $0)

if [[ $cmd == "seconds_to_duration" ]] ; then
	total=$1
	[[ $total =~ ^([0-9]+)(|.([0-9]+))+$ ]]
	s=${BASH_REMATCH[1]}
	ss=${BASH_REMATCH[2]}

	#$ s="1234.56789" ; [[ $s =~ ^([0-9]+)(|.([0-9]+))+$ ]] && for i in {1..10} ; do echo "$i: ${BASH_REMATCH[$i]}" ; done
	#1: 1234
	#2: .56789
	#3: 56789

	m=$(($s / 60))
	s=$(($s % 60))

	h=$(($m / 60))
	m=$(($m % 60))

	d=$(($h / 24))
	h=$(($h % 24))

	case $d in
		0) days="" ;;
		1) days="1 day " ;;
#		2*|1[0-9]*) days="$d days " ;;
		*) days="$d days " ;;
	esac
	printf "$total seconds => %s%d:%02d:%02d%s\n" "$days" $h $m $s $ss
elif [[ $cmd == "duration_to_seconds" ]] ; then
	duration="$@"
	if [[ $duration =~ (((([0-9]+)?(| days?)? )?(([0-9]{1,2}):)(([0-9]+):(([0-9]{2})(.([0-9]+)?)?)))) ]] ; then

		[[ -n ${BASH_REMATCH[4]} ]] && d=${BASH_REMATCH[4]} || d=0
		[[ -n ${BASH_REMATCH[7]} ]] && h=${BASH_REMATCH[7]} || h=0
		[[ -n ${BASH_REMATCH[9]} ]] && m=${BASH_REMATCH[9]} || m=0
		[[ -n ${BASH_REMATCH[11]} ]] && s=${BASH_REMATCH[11]} || s=0
		[[ -n ${BASH_REMATCH[12]} ]] && ss=${BASH_REMATCH[12]} || ss=""

		s=$(( ((((($d * 24) + $h)*60) + $m) * 60) + $s ))

		echo "$duration => $s$ss seconds"

		false && {
			for i in {1..20} ; do
				echo "  $i: ${BASH_REMATCH[$i]}"
			done
			1: 2 days 23:14:56.789
			2: 2 days 23:14:56.789
			3: 2 days
			4: 2
			5:  days
			6: 23:
			7: 23
			8: 14:56.789
			9: 14
			10: 56.789
			11: 56
			12: .789
			13: 789
		}
	else
		echo "Unable to parse '$duration'"
	fi
fi
