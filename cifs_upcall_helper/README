# Frank Sorenson <sorenson@redhat.com>, 2025

# helper script to be entered into /etc/request-key.d/cifs.spnego
#   to enable complex matching of fields in the description field
#   of the key when using krb5 for cifs mounts

# see README file for further details

# to use this helper script, put this script at
#   /usr/sbin/cifs_upcall_helper, and enter the following line in
#   /etc/request-key.d/cifs.spnego:
#
#     create  cifs.spnego    * * /usr/sbin/cifs-upcall-helper %k
#
# this script will read each line of /etc/cifs-upcall-helper.conf,
#   applying match criteria in the first field to the key
#   description; if all criteria match, the options specified in
#   the second field are used to construct the command-line for
#   calling the cifs.upcall program.

# if the cifs-upcall-helper.conf file is not present, or if
#   no lines match, the cifs.upcall is executed with the
#   current default options (if any)


# each line of the cifs-upcall-helper.conf file has the following
#   format:
#
# <line> :=
#     <selection_criteria><whitespace><options>
#     default<whitespace><options>
#     verbosity|log_level|logging|debug<whitespace><log_level>
#
# <selection_criteria> := <criterion>[<delimiter><criterion>]*
#
# <options> := <option>[<delimiter><option>]*
#
# <delimiter> := [,;]
#
# <criterion> :=
#     *
#     host<string_comparator><host_string>
#     user<string_comparator><user_string>
#     sec<string_comparator><sec_string>

#     ip4<ip4_comparator><ip4_string>
#     ip6<string_comparator><ip6_string>
#         TODO: enhance ip6_comparator

#     uid<numeric_comparator><uid_string>
#     creduid<numeric_comparator><uid_string>

# <string_comparator> :=
#     '=' | '==' | '!=' | '~' | '!~'
#       '=', '==', and '!=' compare as 'globs'
#           ('*' is a wildcard which represents zero or more
#           characters; all other characters are literals)
#       '~' and '!~' compare the string as a 'regex'

# <host_string> := <character_string>
# <user_string> := <character_string>
# <sec_string> := krb5 | mskrb5

# <character_string> := [-a-zA-Z0-9_.]

# <ip4_comparator> := '=', '==', '!='

# <ip4_string> :=
#     <ip4_addr> | <ip4_range> | <ip4_net_netmask> | <ip4_net_prefix>
#
# <ip4_addr> := [0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}
# <ip4_range> := <ip4_addr>-<ip4_addr>
# <ip4_net_netmask> := <ip4_addr>/<ip4_addr>
# <ip4_net_prefix> := <ip4_addr>/<ip4_prefix>
# <ip4_prefix> := ([0-9]|[12][0-9]|3[0-2])
#
#     (invalid netmask/prefix results in 'not a match', regardless of comparator)

# <numeric_comparator> := '<' | '<=' | '=' | '==' | '>=' | '>' | '!='

# <uid_string> := [0-9]+ | 0x[0-9a-fA-F]+


# <option> :=
#     * | -
#     keytab=<path>
#     krb5conf=<path>
#     expire=<timeout>
#     use-proxy|use_proxy
#     no-env-probe|no_env_probe
#     trust-dns|trust_dns
#     legacy-uid|legacy_uid

# <timeout> := [0-9]+

# in the <option> field, the <path> values for <keytab> and <krb5conf>
#     will also accept the following macros:
#     %h   server hostname
#     %i   server IP address
#     %s   sec type
#     %U   uid
#     %c   creduid
#     %u   username


# when 'default' is specified as the selection criteria, all currently-specified
#     default options are cleared, and the <options> specified (if any) are
#     set as defaults
#     the line does not match, and processing continues with the next line
#     use option '*' or '-' as a placeholder; options will be cleared, but no
#       new options set
#     NOTE: default must be the only criteria

# <log_level> := (errors|quiet|info|debug)
#
# when 'verbosity', 'log_level', 'logging', or 'debug' is specified as the selection criteria,
#     the logging level is set to the specified level.  Options are:
#     errors|quiet
#         only errors are logged to syslog, at level LOG_ERR
#     info
#         more verbose information is logged to syslog, at level LOG_INFO
#     debug
#         verbose debugging messages are output to syslog, at level LOG_INFO
#     any other values
#         verbosity is unchanged


# example lines:

# set a default option to be applied on any future matches
default                    use_proxy

# set the log level to 1/info:
verbosity                  info

# match usernames; add the keytab option (to already configured default of 'use_proxy')
user=cifsclientvm23        keytab=/etc/cifsclientvm23.keytab
user=user2                 keytab=/etc/cifsuser2.keytab

# clear current default options; don't set any default options
default                    -

# match usernames with regex; add the keytab options using % macro for username
user~cifsuser[1-5]         keytab=/etc/cifs_keytabs/%u.keytab

# match a cifs server hostname; no additional options applied
host=server1               -

# match cifs server hostnames using regex; add keytab option
host~svr(chicago|london)[0-9]+  keytab=/etc/cifs_keytabs/chi_ldn.keytab

# match cifs server hostnames using regex to select some, then exclude a specific hostname; add keytab
host~svrchicago[1-5],host!=svrchicago3  keytab=/etc/cifs_keytabs/chi_not3.keytab

# several ip4 formats; no additional options
ip4=192.168.122.73         -
ip4=192.168.122.70-192.168.122.80  -
ip4=192.168.123.0/255.255.255.0  -
ip4=192.168.123.0/24       -

# any IP except this one; no additional options
ip4!=192.168.122.73        -

# match both an ip AND a user (all criteria must be met to match); add keytab
ip4=10.2.3.4,user=user1    keytab=/etc/cifsuser1.keytab

# match specified uid; add keytab
uid=501                    keytab=/etc/cifsuser5.keytab

# match uid greater than 500; add keytab
uid>500                    keytab=/etc/cifsusers.keytab

# always match, don't add any more options; equivalent to reaching
#   the end of the file without matching any lines, so probably
#   unnecessary, unless used to bypass the remainder of the file
*                          -
