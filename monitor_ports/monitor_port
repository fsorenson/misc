#!/usr/bin/perl -w

use strict;

use IO::Socket::INET;
use Data::Dumper;
use POSIX qw(strftime);

my $portnum = 111;

# auto-flush on socket
$| = 1;
  
sub ex {
	my $cmd = join " ", @_;
	open my $IN, '-|', $cmd or return;
	while (<$IN>) {
		printf("%s", $_);
	}
}

# creating a listening socket
my $socket = new IO::Socket::INET (
	LocalHost => '0.0.0.0',
	LocalPort => $portnum,
	Proto => 'tcp',
	Listen => 5,
	Reuse => 1
);

die "cannot create socket $!\n" unless $socket;

while(1) {
	# waiting for a new client connection
	my $client_socket = $socket->accept();

	# get information about a newly connected client
	my $client_address = $client_socket->peerhost();
	my $client_port = $client_socket->peerport();
	my $now = strftime("%Y-%m-%d %H:%M:%S", localtime);
	print "==========================================================\n";
	print "$now: connection from $client_address:$client_port\n";

	my $cmd = "ss -pno state established '( dport = :$portnum and sport = :$client_port )'";

	open my $IN, '-|', $cmd or die("could not exec ss");
	my $line = <$IN>;
	$line = <$IN>;

	close $IN;

	my $ip_part = "(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])";
	my $ip_addr = qr|(?:(?:$ip_part\.){3}$ip_part)|;


	if ($line =~ /^([0-9]+)\s+([0-9]+)\s+($ip_addr):([0-9]+)\s+($ip_addr):([0-9]+)\s+([^:]+):\(\(\"([^\"]+)\",([0-9]+),([0-9]+)\)\)/) {
		printf("connection from '%s' pid %d\n", $8, $9);
		ex("ps -afq $9");
		ex("ps axf");
	}
	shutdown($client_socket, 1);
}
